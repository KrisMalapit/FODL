

@{
    ViewData["Title"] = "Index";
}

<style>
    /* Mimic table appearance */
    #fileuploaddiv.table {
        display: table;
    }

        #fileuploaddiv.table .file-row {
            display: table-row;
        }

            #fileuploaddiv.table .file-row > #fileuploaddiv {
                display: table-cell;
                vertical-align: top;
                border-top: 1px solid #ddd;
                padding: 8px;
            }

            #fileuploaddiv.table .file-row:nth-child(odd) {
                background: #f9f9f9;
            }



    /* The total progress gets shown by event listeners */
    #total-progress {
        opacity: 0;
        transition: opacity 0.3s linear;
    }

    /* Hide the progress bar when finished */
    #previews .file-row.dz-success .progress {
        opacity: 0;
        transition: opacity 0.3s linear;
    }

    /* Hide the delete button initially */
    #previews .file-row .delete {
        display: none;
    }

    /* Hide the start and cancel buttons and show the delete button */

    #previews .file-row.dz-success .start,
    #previews .file-row.dz-success .cancel {
        display: none;
    }

    #previews .file-row.dz-success .delete {
        display: block;
    }

    .error_response {
        color: red;
    }

    .success_response {
        color: darkgreen;
    }
</style>



<div id="itemsModal" class="modal inmodal in" role="dialog" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content animated fadeIn">
            <div class="modal-header">

                <h4 class="modal-title">Files</h4>
                <small class="font-bold">List of files to be uploaded</small>
            </div>
            <div class="modal-body" id="fileuploaddiv">
                <div id="actions" class="row">
                    <div class="col-lg-7">

                        <span class="btn btn-success fileinput-button dz-clickable">
                            <i class="glyphicon glyphicon-plus"></i>
                            <span>Add files...</span>
                        </span>
                        <button type="submit" class="btn btn-primary start" style="display:none;">
                            <i class="fa fa-upload"></i>&nbsp;
                            <span>Start upload</span>
                        </button>
                        <button type="reset" class="btn btn-warning cancel" style="display:none;">
                            <i class="glyphicon glyphicon-ban-circle"></i>
                            <span>Cancel upload</span>
                        </button>
                    </div>

                    <div class="col-lg-5">
                        <!-- The global file processing state -->
                        <span class="fileupload-process">
                            <div id="total-progress" class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">
                                <div class="progress-bar progress-bar-success" style="width:0%;" data-dz-uploadprogress=""></div>
                            </div>
                        </span>
                    </div>
                </div>
                <div class="table table-striped files" id="previews">
                    <div id="template" class="file-row dz-image-preview">
                        <!-- This is used as the file preview template -->
                        <div>
                            <span class="preview"><img data-dz-thumbnail></span>
                        </div>
                        <div>
                            <p class="name" data-dz-name></p>
                            <strong class="error text-danger" data-dz-errormessage></strong>
                        </div>
                        <div>
                            <p class="size" data-dz-size></p>
                            <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">
                                <div class="progress-bar progress-bar-success" style="width:0%;" data-dz-uploadprogress></div>
                            </div>
                        </div>
                        <div>
                            <button class="btn btn-primary start" onclick="setstatId();">
                                <i class="glyphicon glyphicon-upload"></i>
                                <span>Start</span>
                            </button>
                            <button data-dz-remove class="btn btn-warning cancel">
                                <i class="glyphicon glyphicon-ban-circle"></i>
                                <span>Cancel</span>
                            </button>
                            <label class="delete dropinfo"></label>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal-footer">

                <div class="card-body" style="padding:0px!important;">



                    <button type="button" id="btnCloseItems" class="btn btn-default" data-dismiss="modal" onclick="location.reload();">Close</button>
                </div>

            </div>
        </div>
    </div>
</div>



<div class="col-lg-12">
    <div class="ibox float-e-margins">
        <div class="ibox-content">
            <p>
                <a asp-action="Create">Create New</a>
                |
                <a href="#" class="anchorAction" id="btnExportExcel">
                    <i class="fa fa-download"></i>
                    <span class="email-text">&nbsp;Download</span>
                </a>

                
                


                @if (User.Identity.GetRoleName() != "User")
                { <text>|</text>
                <a href="#" id="btnAdd" class="anchorAction">
                    <i class="fa fa-upload"></i>
                    <span class="email-text">&nbsp;Upload</span>
                </a>

                }




            </p>
            <table id="tbl" class="table table-striped table-no-bordered table-hover dataTable" style="width: 100%!important">

                <thead>
                    <tr>
                        <th>Reference No</th>
                        <th>Date Created</th>
                        <th>Shift</th>
                        <th>LubeTruck</th>
                        <th>Dispenser</th>
                        <th>Status</th>
                        <th style="width:8%">Action</th>

                    </tr>
                    <tr>
                        <th>Reference No</th>
                        <th>Date Created</th>
                        <th>Shift</th>
                        <th>LubeTruck</th>
                        <th>Dispenser</th>
                        <th>Status</th>

                        <th></th>

                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th>Reference No</th>
                        <th>Date Created</th>
                        <th>Shift</th>
                        <th>LubeTruck</th>
                        <th>Dispenser</th>
                        <th>Status</th>
                        <th></th>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
</div>

<script>
    $('#btnAdd').click(function () {
        $("#itemsModal").modal('show')
    })
    $(function () {
        dropzne();
    })
    function dropzne() {

        var previewNode = document.querySelector("#template");
        previewNode.id = "";
        var previewTemplate = previewNode.parentNode.innerHTML;
        previewNode.parentNode.removeChild(previewNode);

        var myDropzone = new Dropzone("#fileuploaddiv", { // Make the whole body a dropzone
            url: "@Url.Action("UploadExcel")", // Set the url
            thumbnailWidth: 80,
            thumbnailHeight: 80,
            parallelUploads: 20,
            previewTemplate: previewTemplate,
            autoQueue: false, // Make sure the files aren't queued until manually added
            previewsContainer: "#previews", // Define the container to display the previews
            clickable: ".fileinput-button" // Define the element that should be used as click trigger to select files.
        });

        myDropzone.on("addedfile", function (file) {
          
            // Hookup the start button
            file.previewElement.querySelector(".start").onclick = function () { myDropzone.enqueueFile(file); };

        });

        // Update the total progress bar
        myDropzone.on("totaluploadprogress", function (progress) {
            document.querySelector("#total-progress .progress-bar").style.width = progress + "%";
        });

        myDropzone.on("sending", function (file) {
            // Show the total progress bar when upload starts
            document.querySelector("#total-progress").style.opacity = "1";
            // And disable the start button
            file.previewElement.querySelector(".start").setAttribute("disabled", "disabled");
        });

        // Hide the total progress bar when nothing's uploading anymore
        myDropzone.on("queuecomplete", function (progress) {
            document.querySelector("#total-progress").style.opacity = "0";

        });

        myDropzone.on("success", function (file, response) {
            console.log(file.previewElement); //kcm
            console.log($(file.previewElement).find(".dropinfo")); //kcm

            var el = $(file.previewElement).find(".dropinfo");

            console.log(response.status);
            if (response.status == "success") {
                el.addClass("success_response").html(response.message);
            } else {
                el.addClass("error_response").html(response.message + "\r\n Please check file type or filename.");
            }
           
            console.log(response); //kcm
          

        });
        myDropzone.on("error", function (file, response) {
            console.log(file.previewElement); //kcm
            console.log($(file.previewElement).find(".dropinfo")); //kcm

            var el = $(file.previewElement).find(".dropinfo");



            el.addClass("error_response").html(response.message + "\r\n Please check file type or filename.");





        });
        
        // Setup the buttons for all transfers
        // The "add files" button doesn't need to be setup because the config
        // `clickable` has already been specified.
        document.querySelector("#actions .start").onclick = function () {
           
            myDropzone.enqueueFiles(myDropzone.getFilesWithStatus(Dropzone.ADDED));


          
        };
        document.querySelector("#actions .cancel").onclick = function () {
            myDropzone.removeAllFiles(true);
           
        };
    }

    $("#btnExportExcel").click(function () {
        var table = $('#tbl').DataTable();
        $rowCount = table.data().count();
       
        if ($rowCount == 0) {
            toastr["error"]("No data to be posted")
            toastr.options = {
                "closeButton": true,
                "showDuration": "3000",
            }
            return false;
        }
       

            $.ajax({
                    url: "@Url.Action("Checkifposted")"
                    , method: "POST"
                    
                    , dataType: 'json'
                    , success: function (responsedata) {
                       if (responsedata.status == "success") {

                           if (confirm(responsedata.message)) {
                               
                               var newWindow = window.open('@Url.Action("DownloadExcel")');
                               
                               //loadDatatable();
                           }


                        } else {

                            toastr["error"](responsedata.message)
                            toastr.options = {
                                "closeButton": true,
                                "showDuration": "3000",
                            }
                        }
                    }
            })
        


        
    })
    $(function () {
        $('#tbl thead tr:eq(1) th').each(function () {

            var title = $(this).text();
            if (title == "") {

            } else {
                $(this).html('<input type="search" class="form-control form-control-sm" placeholder="Search ' + title + '" />');
            }
        });

        loadDatatable();
    })

    function loadDatatable() {


        if ($.fn.DataTable.isDataTable('#tbl')) {
            $('#tbl').DataTable().destroy();
        }

        var table = $("#tbl").DataTable({
            "processing": true,
            "serverSide": true,
            "searching": true,
            "fixedHeader": true,
            "order": [[1, "desc"]],
            "ajax": {
                "url": "@Url.Action("getData")",
                "type": "POST",
                "datatype": "json"
            },
            "columns": [
                { "data": "referenceNo", "name": "ReferenceNo", "autoWidth": true },
                {
                    data: "createdDate",
                    name: "CreatedDate",
                    render: function (data, type, row) {

                        return moment(data).format("YYYY-MM-DD HH:mm:ss");
                    }
                },

                { "data": "shift", "name": "Shift", "autoWidth": true },
                { "data": "lubeTruckName", "name": "LubeTruckName", "autoWidth": true },
                { "data": "dispenserName", "name": "DispenserName", "autoWidth": true },
                { "data": "status", "name": "Status", "autoWidth": true },
                {
                     render: function (data, type, row) {
                         var linkEdit = "@Url.Action("Edit", "FuelOil")?id=" + row.id;
                         var linkDelete = "@Url.Action("Delete", "FuelOil")?id=" + row.id;

                         if (row.status == "Active") {
                             $actions =
                                 '<a title="Edit" class="btn btn-white btn-bitbucket" href="' + linkEdit + '"><i class="fa fa-list"></i></a> ' +

                             '<a title="Delete" onclick="deleteItem(' + row.id + ')" class="btn btn-danger btn-bitbucket" href="#"><i class="fa fa-trash"></i></a>';



                             return $actions;
                         } else {
                             $actions =
                                 '<a title="Edit" class="btn btn-white btn-bitbucket" href="' + linkEdit + '"><i class="fa fa-list"></i></a> ';



                             return $actions;
                         }

                    }
                }


            ]
            ,
            "columnDefs": [{ "orderable": false, "targets": [6] }]


        });





        $('#tbl input').on('keyup change', function (e) {

            var keyCode = e.keyCode
            if (keyCode >= 9 && keyCode <= 27) {

            } else {
                searchFunction(this);
            }
        });
        function searchFunction(e) {

            delay(function () {
                console.log(e);
                table.column($(e).parent().index() + ':visible')
                    .search(e.value)
                    .draw();
            }, 1000);
        }
        $("#tbl_filter").hide();
    }

    var delay = (function () {
        var timer = 0;
        return function (callback, ms) {
            clearTimeout(timer);
            timer = setTimeout(callback, ms);
        };
    })();


    function deleteItem(id) {
         if (confirm('This will delete list. Continue?')) {
            $.ajax({
            url: "@Url.Action("Delete")"
            , method: "POST"
            , data: { id: id }
            , dataType: 'json'
            , success: function (responsedata) {
               if (responsedata.status == "success") {

                   toastr["success"]("Item Deleted","<b>Success</b> ")
                   loadDatatable();


                } else {

                    toastr["error"](responsedata.message)
                    toastr.options = {
                        "closeButton": true,
                        "showDuration": "3000",
                    }
                }
            }
        })

        }
    }



</script>
